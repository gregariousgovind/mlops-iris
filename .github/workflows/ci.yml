name: CI-CD

on:
  push:
    branches: [ main ]
  pull_request:

# cancel previous runs of the same branch/PR to save minutes
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_USERNAME }}/mlops-iris

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # ---------- Python setup & tests ----------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.lock.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps (from lock)
        run: |
          python -m pip install --upgrade pip
          test -f requirements.lock.txt || (echo "Missing requirements.lock.txt"; exit 1)
          pip install -r requirements.lock.txt

      - name: Lint
        run: flake8

      - name: Tests
        run: pytest -q

      # ---------- Docker build & (conditional) push ----------
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta (tags & labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKERHUB_REPO }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
            type=sha,format=short,prefix=,suffix=,enable=true

      # Log in only for pushes to main
      - name: Login to DockerHub
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build (and push on main)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache Docker layers between runs
          cache-from: type=gha
          cache-to: type=gha,mode=max
